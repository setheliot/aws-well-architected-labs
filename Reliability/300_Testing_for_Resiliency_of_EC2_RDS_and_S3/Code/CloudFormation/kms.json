{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates an RDS MySQL 5.7 instance",
  "Parameters": {
      "WorkshopName": {
        "Type": "String"
      }
  },
  "Resources": {
    "KmsKeyAlias": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
          "AliasName": {
              "Fn::Sub": "alias/${WorkshopName}"
          },
          "TargetKeyId": {
              "Ref": "KmsKey"
          }
      }
    },
    "KmsKey": {
      "DependsOn": "LambdaExecutionRole",
      "Type": "AWS::KMS::Key",
      "Properties": {
          "Description": {
              "Fn::Sub": "Manages secrets in the ${WorkshopName} workshop"
          },
          "Enabled": true,
          "EnableKeyRotation": true,
          "KeyPolicy": {
              "Version": "2012-10-17",
              "Id": "KeyPolicyForKMS",
              "Statement": [
                  {
                      "Sid": "Enable IAM User/Role Permissions",
                      "Effect": "Allow",
                      "Principal": {
                            "AWS": [
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                                },
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/LambdaCustomKMS"
                                },
                                {
                                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/WebAppLambdaRole"
                                }
                            ]
                      },
                      "Action": "kms:*",
                      "Resource": "*"
                  }
              ]
          }
      }
    },
    "CustomResource" : {
        "Type" : "Custom::LambdaSSMSecureString",
        "Properties" : {
          "ServiceToken": { 
              "Fn::GetAtt": [
                    "LambdaCustomResource",
                    "Arn"
        ] },
          "KmsKeyID": {
            "Ref": "KmsKey"
          },
          "KmsKeyName": {
            "Fn::Sub": "${WorkshopName}"
          }
        }
      },
    "LambdaCustomResource": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
            "Handler": "index.handler",
            "Runtime": "python3.6",
            "Timeout": 30,
            "Role": {
                "Fn::GetAtt": [
                    "LambdaExecutionRole",
                    "Arn"
                ]
            },
            "Code": {
                "ZipFile": {
                    "Fn::Join": [
                        "\n",
                        [
                            "import boto3",
                            "import random",
                            "import string",
                            "",
                            "def generate_password(password_length):",
                            "    return ''.join(",
                            "    random.SystemRandom().choice(",
                            "       string.ascii_lowercase + string.digits) for _ in range(password_length))",
                            "",
                            "def write_password_to_ssm(parameter_name, value, kms_key):",
                            "    client = boto3.client('ssm')",
                            "    print('Writing password to SSM parameter store.')",
                            "    client.put_parameter(",
                            "       Name=parameter_name,",
                            "       Value=value,",
                            "       Type='SecureString',",
                            "       KeyId=kms_key,",
                            "       Overwrite=True",
                            "    )",
                            "    return",
                            "",
                            "def handler(event, context):",
                            "    print(event)",
                            "    kms_key = event['KmsKeyID']",
                            "    key_name = event['KeyName']",
                            "    write_password_to_ssm(KeyName, generate_password(10), kms_key)",
                            "    return"
                        ]
                    ]
                }
            }
        }
    },
    "LambdaExecutionRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "RoleName": "LambdaCustomKMS",
            "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com"
                            ]
                        },
                        "Action": [
                            "sts:AssumeRole"
                        ]
                    }
                ]
            },
            "Path": "/",
            "Policies": [
                {
                    "PolicyName": "root",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                ],
                                "Resource": "arn:aws:logs:*:*:*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "ssm:PutParameter"
                                ],
                                "Resource": "*"
                            }
                        ]
                    }
                }
            ]
        }
    }
},
  "Outputs": {}
}